// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pipeline.proto

#include "pipeline.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace Lmm {
class GenericQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericQ>
      _instance;
} _GenericQ_default_instance_;
class QueueInfoQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueueInfoQ>
      _instance;
} _QueueInfoQ_default_instance_;
class PipelinesInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PipelinesInfo>
      _instance;
} _PipelinesInfo_default_instance_;
class PipelineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pipeline>
      _instance;
} _Pipeline_default_instance_;
class ElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Element>
      _instance;
} _Element_default_instance_;
class QueueInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueueInfo>
      _instance;
} _QueueInfo_default_instance_;
}  // namespace Lmm
namespace protobuf_pipeline_2eproto {
void InitDefaultsGenericQImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Lmm::_GenericQ_default_instance_;
    new (ptr) ::Lmm::GenericQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lmm::GenericQ::InitAsDefaultInstance();
}

void InitDefaultsGenericQ() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGenericQImpl);
}

void InitDefaultsQueueInfoQImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Lmm::_QueueInfoQ_default_instance_;
    new (ptr) ::Lmm::QueueInfoQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lmm::QueueInfoQ::InitAsDefaultInstance();
}

void InitDefaultsQueueInfoQ() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueueInfoQImpl);
}

void InitDefaultsPipelinesInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pipeline_2eproto::InitDefaultsPipeline();
  {
    void* ptr = &::Lmm::_PipelinesInfo_default_instance_;
    new (ptr) ::Lmm::PipelinesInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lmm::PipelinesInfo::InitAsDefaultInstance();
}

void InitDefaultsPipelinesInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPipelinesInfoImpl);
}

void InitDefaultsPipelineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pipeline_2eproto::InitDefaultsElement();
  {
    void* ptr = &::Lmm::_Pipeline_default_instance_;
    new (ptr) ::Lmm::Pipeline();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lmm::Pipeline::InitAsDefaultInstance();
}

void InitDefaultsPipeline() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPipelineImpl);
}

void InitDefaultsElementImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pipeline_2eproto::InitDefaultsQueueInfo();
  {
    void* ptr = &::Lmm::_Element_default_instance_;
    new (ptr) ::Lmm::Element();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lmm::Element::InitAsDefaultInstance();
}

void InitDefaultsElement() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsElementImpl);
}

void InitDefaultsQueueInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Lmm::_QueueInfo_default_instance_;
    new (ptr) ::Lmm::QueueInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Lmm::QueueInfo::InitAsDefaultInstance();
}

void InitDefaultsQueueInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueueInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::GenericQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::GenericQ, dummy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfoQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfoQ, pipeline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfoQ, element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfoQ, outqi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfoQ, inqi_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::PipelinesInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::PipelinesInfo, pipelines_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::Pipeline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::Pipeline, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::Pipeline, elements_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::Element, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::Element, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::Element, outq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::Element, inq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfo, buffercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfo, fps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfo, elapsedsincelastadd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfo, receivedcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfo, sentcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfo, totalsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfo, bitrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Lmm::QueueInfo, ratelimit_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Lmm::GenericQ)},
  { 6, -1, sizeof(::Lmm::QueueInfoQ)},
  { 15, -1, sizeof(::Lmm::PipelinesInfo)},
  { 21, -1, sizeof(::Lmm::Pipeline)},
  { 28, -1, sizeof(::Lmm::Element)},
  { 36, -1, sizeof(::Lmm::QueueInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lmm::_GenericQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lmm::_QueueInfoQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lmm::_PipelinesInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lmm::_Pipeline_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lmm::_Element_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Lmm::_QueueInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pipeline.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016pipeline.proto\022\003Lmm\"\031\n\010GenericQ\022\r\n\005dum"
      "my\030\001 \001(\005\"L\n\nQueueInfoQ\022\020\n\010pipeline\030\001 \001(\005"
      "\022\017\n\007element\030\002 \001(\005\022\r\n\005outqi\030\003 \001(\005\022\014\n\004inqi"
      "\030\004 \001(\005\"1\n\rPipelinesInfo\022 \n\tpipelines\030\001 \003"
      "(\0132\r.Lmm.Pipeline\"8\n\010Pipeline\022\014\n\004name\030\001 "
      "\001(\t\022\036\n\010elements\030\002 \003(\0132\014.Lmm.Element\"R\n\007E"
      "lement\022\014\n\004name\030\001 \001(\t\022\034\n\004outq\030\002 \003(\0132\016.Lmm"
      ".QueueInfo\022\033\n\003inq\030\003 \003(\0132\016.Lmm.QueueInfo\""
      "\214\002\n\tQueueInfo\022\023\n\013bufferCount\030\001 \001(\005\022\013\n\003fp"
      "s\030\002 \001(\002\022\033\n\023elapsedSinceLastAdd\030\003 \001(\003\022\025\n\r"
      "receivedCount\030\004 \001(\005\022\021\n\tsentCount\030\005 \001(\005\022\021"
      "\n\ttotalSize\030\006 \001(\003\022\017\n\007bitrate\030\007 \001(\005\022+\n\tra"
      "teLimit\030\010 \001(\0162\030.Lmm.QueueInfo.RateLimit\""
      "E\n\tRateLimit\022\010\n\004NONE\020\000\022\014\n\010INTERVAL\020\001\022\020\n\014"
      "BUFFER_COUNT\020\002\022\016\n\nTOTAL_SIZE\020\0032t\n\017Pipeli"
      "neService\022.\n\007GetInfo\022\r.Lmm.GenericQ\032\022.Lm"
      "m.PipelinesInfo\"\000\0221\n\014GetQueueInfo\022\017.Lmm."
      "QueueInfoQ\032\016.Lmm.QueueInfo\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 716);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pipeline.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_pipeline_2eproto
namespace Lmm {
const ::google::protobuf::EnumDescriptor* QueueInfo_RateLimit_descriptor() {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pipeline_2eproto::file_level_enum_descriptors[0];
}
bool QueueInfo_RateLimit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QueueInfo_RateLimit QueueInfo::NONE;
const QueueInfo_RateLimit QueueInfo::INTERVAL;
const QueueInfo_RateLimit QueueInfo::BUFFER_COUNT;
const QueueInfo_RateLimit QueueInfo::TOTAL_SIZE;
const QueueInfo_RateLimit QueueInfo::RateLimit_MIN;
const QueueInfo_RateLimit QueueInfo::RateLimit_MAX;
const int QueueInfo::RateLimit_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void GenericQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericQ::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericQ::GenericQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pipeline_2eproto::InitDefaultsGenericQ();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lmm.GenericQ)
}
GenericQ::GenericQ(const GenericQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:Lmm.GenericQ)
}

void GenericQ::SharedCtor() {
  dummy_ = 0;
  _cached_size_ = 0;
}

GenericQ::~GenericQ() {
  // @@protoc_insertion_point(destructor:Lmm.GenericQ)
  SharedDtor();
}

void GenericQ::SharedDtor() {
}

void GenericQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenericQ::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenericQ& GenericQ::default_instance() {
  ::protobuf_pipeline_2eproto::InitDefaultsGenericQ();
  return *internal_default_instance();
}

GenericQ* GenericQ::New(::google::protobuf::Arena* arena) const {
  GenericQ* n = new GenericQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericQ::Clear() {
// @@protoc_insertion_point(message_clear_start:Lmm.GenericQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _internal_metadata_.Clear();
}

bool GenericQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lmm.GenericQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lmm.GenericQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lmm.GenericQ)
  return false;
#undef DO_
}

void GenericQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lmm.GenericQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lmm.GenericQ)
}

::google::protobuf::uint8* GenericQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lmm.GenericQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dummy = 1;
  if (this->dummy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lmm.GenericQ)
  return target;
}

size_t GenericQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lmm.GenericQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 dummy = 1;
  if (this->dummy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lmm.GenericQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lmm.GenericQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lmm.GenericQ)
    MergeFrom(*source);
  }
}

void GenericQ::MergeFrom(const GenericQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lmm.GenericQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dummy() != 0) {
    set_dummy(from.dummy());
  }
}

void GenericQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lmm.GenericQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericQ::CopyFrom(const GenericQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lmm.GenericQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericQ::IsInitialized() const {
  return true;
}

void GenericQ::Swap(GenericQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericQ::InternalSwap(GenericQ* other) {
  using std::swap;
  swap(dummy_, other->dummy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenericQ::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueueInfoQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueueInfoQ::kPipelineFieldNumber;
const int QueueInfoQ::kElementFieldNumber;
const int QueueInfoQ::kOutqiFieldNumber;
const int QueueInfoQ::kInqiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueueInfoQ::QueueInfoQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pipeline_2eproto::InitDefaultsQueueInfoQ();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lmm.QueueInfoQ)
}
QueueInfoQ::QueueInfoQ(const QueueInfoQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pipeline_, &from.pipeline_,
    static_cast<size_t>(reinterpret_cast<char*>(&inqi_) -
    reinterpret_cast<char*>(&pipeline_)) + sizeof(inqi_));
  // @@protoc_insertion_point(copy_constructor:Lmm.QueueInfoQ)
}

void QueueInfoQ::SharedCtor() {
  ::memset(&pipeline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inqi_) -
      reinterpret_cast<char*>(&pipeline_)) + sizeof(inqi_));
  _cached_size_ = 0;
}

QueueInfoQ::~QueueInfoQ() {
  // @@protoc_insertion_point(destructor:Lmm.QueueInfoQ)
  SharedDtor();
}

void QueueInfoQ::SharedDtor() {
}

void QueueInfoQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueueInfoQ::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueueInfoQ& QueueInfoQ::default_instance() {
  ::protobuf_pipeline_2eproto::InitDefaultsQueueInfoQ();
  return *internal_default_instance();
}

QueueInfoQ* QueueInfoQ::New(::google::protobuf::Arena* arena) const {
  QueueInfoQ* n = new QueueInfoQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueueInfoQ::Clear() {
// @@protoc_insertion_point(message_clear_start:Lmm.QueueInfoQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pipeline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inqi_) -
      reinterpret_cast<char*>(&pipeline_)) + sizeof(inqi_));
  _internal_metadata_.Clear();
}

bool QueueInfoQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lmm.QueueInfoQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 pipeline = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pipeline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 element = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &element_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 outqi = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &outqi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 inqi = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inqi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lmm.QueueInfoQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lmm.QueueInfoQ)
  return false;
#undef DO_
}

void QueueInfoQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lmm.QueueInfoQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 pipeline = 1;
  if (this->pipeline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pipeline(), output);
  }

  // int32 element = 2;
  if (this->element() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->element(), output);
  }

  // int32 outqi = 3;
  if (this->outqi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->outqi(), output);
  }

  // int32 inqi = 4;
  if (this->inqi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->inqi(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lmm.QueueInfoQ)
}

::google::protobuf::uint8* QueueInfoQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lmm.QueueInfoQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 pipeline = 1;
  if (this->pipeline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pipeline(), target);
  }

  // int32 element = 2;
  if (this->element() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->element(), target);
  }

  // int32 outqi = 3;
  if (this->outqi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->outqi(), target);
  }

  // int32 inqi = 4;
  if (this->inqi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->inqi(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lmm.QueueInfoQ)
  return target;
}

size_t QueueInfoQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lmm.QueueInfoQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 pipeline = 1;
  if (this->pipeline() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pipeline());
  }

  // int32 element = 2;
  if (this->element() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->element());
  }

  // int32 outqi = 3;
  if (this->outqi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->outqi());
  }

  // int32 inqi = 4;
  if (this->inqi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->inqi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueueInfoQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lmm.QueueInfoQ)
  GOOGLE_DCHECK_NE(&from, this);
  const QueueInfoQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueueInfoQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lmm.QueueInfoQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lmm.QueueInfoQ)
    MergeFrom(*source);
  }
}

void QueueInfoQ::MergeFrom(const QueueInfoQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lmm.QueueInfoQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pipeline() != 0) {
    set_pipeline(from.pipeline());
  }
  if (from.element() != 0) {
    set_element(from.element());
  }
  if (from.outqi() != 0) {
    set_outqi(from.outqi());
  }
  if (from.inqi() != 0) {
    set_inqi(from.inqi());
  }
}

void QueueInfoQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lmm.QueueInfoQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueueInfoQ::CopyFrom(const QueueInfoQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lmm.QueueInfoQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueueInfoQ::IsInitialized() const {
  return true;
}

void QueueInfoQ::Swap(QueueInfoQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueueInfoQ::InternalSwap(QueueInfoQ* other) {
  using std::swap;
  swap(pipeline_, other->pipeline_);
  swap(element_, other->element_);
  swap(outqi_, other->outqi_);
  swap(inqi_, other->inqi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueueInfoQ::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PipelinesInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PipelinesInfo::kPipelinesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PipelinesInfo::PipelinesInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pipeline_2eproto::InitDefaultsPipelinesInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lmm.PipelinesInfo)
}
PipelinesInfo::PipelinesInfo(const PipelinesInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pipelines_(from.pipelines_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Lmm.PipelinesInfo)
}

void PipelinesInfo::SharedCtor() {
  _cached_size_ = 0;
}

PipelinesInfo::~PipelinesInfo() {
  // @@protoc_insertion_point(destructor:Lmm.PipelinesInfo)
  SharedDtor();
}

void PipelinesInfo::SharedDtor() {
}

void PipelinesInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PipelinesInfo::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PipelinesInfo& PipelinesInfo::default_instance() {
  ::protobuf_pipeline_2eproto::InitDefaultsPipelinesInfo();
  return *internal_default_instance();
}

PipelinesInfo* PipelinesInfo::New(::google::protobuf::Arena* arena) const {
  PipelinesInfo* n = new PipelinesInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PipelinesInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Lmm.PipelinesInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pipelines_.Clear();
  _internal_metadata_.Clear();
}

bool PipelinesInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lmm.PipelinesInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Lmm.Pipeline pipelines = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pipelines()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lmm.PipelinesInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lmm.PipelinesInfo)
  return false;
#undef DO_
}

void PipelinesInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lmm.PipelinesInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Lmm.Pipeline pipelines = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pipelines_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pipelines(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lmm.PipelinesInfo)
}

::google::protobuf::uint8* PipelinesInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lmm.PipelinesInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Lmm.Pipeline pipelines = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pipelines_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pipelines(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lmm.PipelinesInfo)
  return target;
}

size_t PipelinesInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lmm.PipelinesInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Lmm.Pipeline pipelines = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pipelines_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pipelines(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PipelinesInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lmm.PipelinesInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PipelinesInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PipelinesInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lmm.PipelinesInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lmm.PipelinesInfo)
    MergeFrom(*source);
  }
}

void PipelinesInfo::MergeFrom(const PipelinesInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lmm.PipelinesInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pipelines_.MergeFrom(from.pipelines_);
}

void PipelinesInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lmm.PipelinesInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PipelinesInfo::CopyFrom(const PipelinesInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lmm.PipelinesInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PipelinesInfo::IsInitialized() const {
  return true;
}

void PipelinesInfo::Swap(PipelinesInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PipelinesInfo::InternalSwap(PipelinesInfo* other) {
  using std::swap;
  pipelines_.InternalSwap(&other->pipelines_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PipelinesInfo::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pipeline::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pipeline::kNameFieldNumber;
const int Pipeline::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pipeline::Pipeline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pipeline_2eproto::InitDefaultsPipeline();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lmm.Pipeline)
}
Pipeline::Pipeline(const Pipeline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      elements_(from.elements_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Lmm.Pipeline)
}

void Pipeline::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Pipeline::~Pipeline() {
  // @@protoc_insertion_point(destructor:Lmm.Pipeline)
  SharedDtor();
}

void Pipeline::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Pipeline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pipeline::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pipeline& Pipeline::default_instance() {
  ::protobuf_pipeline_2eproto::InitDefaultsPipeline();
  return *internal_default_instance();
}

Pipeline* Pipeline::New(::google::protobuf::Arena* arena) const {
  Pipeline* n = new Pipeline;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pipeline::Clear() {
// @@protoc_insertion_point(message_clear_start:Lmm.Pipeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Pipeline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lmm.Pipeline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lmm.Pipeline.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Lmm.Element elements = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_elements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lmm.Pipeline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lmm.Pipeline)
  return false;
#undef DO_
}

void Pipeline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lmm.Pipeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lmm.Pipeline.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Lmm.Element elements = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elements_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->elements(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lmm.Pipeline)
}

::google::protobuf::uint8* Pipeline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lmm.Pipeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lmm.Pipeline.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Lmm.Element elements = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elements_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->elements(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lmm.Pipeline)
  return target;
}

size_t Pipeline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lmm.Pipeline)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Lmm.Element elements = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->elements_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->elements(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pipeline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lmm.Pipeline)
  GOOGLE_DCHECK_NE(&from, this);
  const Pipeline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pipeline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lmm.Pipeline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lmm.Pipeline)
    MergeFrom(*source);
  }
}

void Pipeline::MergeFrom(const Pipeline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lmm.Pipeline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Pipeline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lmm.Pipeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pipeline::CopyFrom(const Pipeline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lmm.Pipeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pipeline::IsInitialized() const {
  return true;
}

void Pipeline::Swap(Pipeline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pipeline::InternalSwap(Pipeline* other) {
  using std::swap;
  elements_.InternalSwap(&other->elements_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pipeline::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Element::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Element::kNameFieldNumber;
const int Element::kOutqFieldNumber;
const int Element::kInqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Element::Element()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pipeline_2eproto::InitDefaultsElement();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lmm.Element)
}
Element::Element(const Element& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      outq_(from.outq_),
      inq_(from.inq_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Lmm.Element)
}

void Element::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Element::~Element() {
  // @@protoc_insertion_point(destructor:Lmm.Element)
  SharedDtor();
}

void Element::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Element::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Element::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Element& Element::default_instance() {
  ::protobuf_pipeline_2eproto::InitDefaultsElement();
  return *internal_default_instance();
}

Element* Element::New(::google::protobuf::Arena* arena) const {
  Element* n = new Element;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Element::Clear() {
// @@protoc_insertion_point(message_clear_start:Lmm.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outq_.Clear();
  inq_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Element::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lmm.Element)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lmm.Element.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Lmm.QueueInfo outq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_outq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Lmm.QueueInfo inq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_inq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lmm.Element)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lmm.Element)
  return false;
#undef DO_
}

void Element::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lmm.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lmm.Element.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Lmm.QueueInfo outq = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outq_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->outq(static_cast<int>(i)), output);
  }

  // repeated .Lmm.QueueInfo inq = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inq_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->inq(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lmm.Element)
}

::google::protobuf::uint8* Element::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lmm.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lmm.Element.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Lmm.QueueInfo outq = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outq_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->outq(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Lmm.QueueInfo inq = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inq_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->inq(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lmm.Element)
  return target;
}

size_t Element::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lmm.Element)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Lmm.QueueInfo outq = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->outq_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outq(static_cast<int>(i)));
    }
  }

  // repeated .Lmm.QueueInfo inq = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->inq_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inq(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Element::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lmm.Element)
  GOOGLE_DCHECK_NE(&from, this);
  const Element* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Element>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lmm.Element)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lmm.Element)
    MergeFrom(*source);
  }
}

void Element::MergeFrom(const Element& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lmm.Element)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  outq_.MergeFrom(from.outq_);
  inq_.MergeFrom(from.inq_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Element::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lmm.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Element::CopyFrom(const Element& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lmm.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Element::IsInitialized() const {
  return true;
}

void Element::Swap(Element* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Element::InternalSwap(Element* other) {
  using std::swap;
  outq_.InternalSwap(&other->outq_);
  inq_.InternalSwap(&other->inq_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Element::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueueInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueueInfo::kBufferCountFieldNumber;
const int QueueInfo::kFpsFieldNumber;
const int QueueInfo::kElapsedSinceLastAddFieldNumber;
const int QueueInfo::kReceivedCountFieldNumber;
const int QueueInfo::kSentCountFieldNumber;
const int QueueInfo::kTotalSizeFieldNumber;
const int QueueInfo::kBitrateFieldNumber;
const int QueueInfo::kRateLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueueInfo::QueueInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pipeline_2eproto::InitDefaultsQueueInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lmm.QueueInfo)
}
QueueInfo::QueueInfo(const QueueInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&buffercount_, &from.buffercount_,
    static_cast<size_t>(reinterpret_cast<char*>(&ratelimit_) -
    reinterpret_cast<char*>(&buffercount_)) + sizeof(ratelimit_));
  // @@protoc_insertion_point(copy_constructor:Lmm.QueueInfo)
}

void QueueInfo::SharedCtor() {
  ::memset(&buffercount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ratelimit_) -
      reinterpret_cast<char*>(&buffercount_)) + sizeof(ratelimit_));
  _cached_size_ = 0;
}

QueueInfo::~QueueInfo() {
  // @@protoc_insertion_point(destructor:Lmm.QueueInfo)
  SharedDtor();
}

void QueueInfo::SharedDtor() {
}

void QueueInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueueInfo::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueueInfo& QueueInfo::default_instance() {
  ::protobuf_pipeline_2eproto::InitDefaultsQueueInfo();
  return *internal_default_instance();
}

QueueInfo* QueueInfo::New(::google::protobuf::Arena* arena) const {
  QueueInfo* n = new QueueInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueueInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Lmm.QueueInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&buffercount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ratelimit_) -
      reinterpret_cast<char*>(&buffercount_)) + sizeof(ratelimit_));
  _internal_metadata_.Clear();
}

bool QueueInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lmm.QueueInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 bufferCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 elapsedSinceLastAdd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &elapsedsincelastadd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 receivedCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receivedcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sentCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sentcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 totalSize = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bitrate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bitrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lmm.QueueInfo.RateLimit rateLimit = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ratelimit(static_cast< ::Lmm::QueueInfo_RateLimit >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lmm.QueueInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lmm.QueueInfo)
  return false;
#undef DO_
}

void QueueInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lmm.QueueInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bufferCount = 1;
  if (this->buffercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buffercount(), output);
  }

  // float fps = 2;
  if (this->fps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fps(), output);
  }

  // int64 elapsedSinceLastAdd = 3;
  if (this->elapsedsincelastadd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->elapsedsincelastadd(), output);
  }

  // int32 receivedCount = 4;
  if (this->receivedcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->receivedcount(), output);
  }

  // int32 sentCount = 5;
  if (this->sentcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sentcount(), output);
  }

  // int64 totalSize = 6;
  if (this->totalsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->totalsize(), output);
  }

  // int32 bitrate = 7;
  if (this->bitrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bitrate(), output);
  }

  // .Lmm.QueueInfo.RateLimit rateLimit = 8;
  if (this->ratelimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->ratelimit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Lmm.QueueInfo)
}

::google::protobuf::uint8* QueueInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Lmm.QueueInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bufferCount = 1;
  if (this->buffercount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buffercount(), target);
  }

  // float fps = 2;
  if (this->fps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fps(), target);
  }

  // int64 elapsedSinceLastAdd = 3;
  if (this->elapsedsincelastadd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->elapsedsincelastadd(), target);
  }

  // int32 receivedCount = 4;
  if (this->receivedcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->receivedcount(), target);
  }

  // int32 sentCount = 5;
  if (this->sentcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sentcount(), target);
  }

  // int64 totalSize = 6;
  if (this->totalsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->totalsize(), target);
  }

  // int32 bitrate = 7;
  if (this->bitrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bitrate(), target);
  }

  // .Lmm.QueueInfo.RateLimit rateLimit = 8;
  if (this->ratelimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->ratelimit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Lmm.QueueInfo)
  return target;
}

size_t QueueInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lmm.QueueInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 bufferCount = 1;
  if (this->buffercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buffercount());
  }

  // float fps = 2;
  if (this->fps() != 0) {
    total_size += 1 + 4;
  }

  // int64 elapsedSinceLastAdd = 3;
  if (this->elapsedsincelastadd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->elapsedsincelastadd());
  }

  // int32 receivedCount = 4;
  if (this->receivedcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->receivedcount());
  }

  // int32 sentCount = 5;
  if (this->sentcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sentcount());
  }

  // int64 totalSize = 6;
  if (this->totalsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalsize());
  }

  // int32 bitrate = 7;
  if (this->bitrate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bitrate());
  }

  // .Lmm.QueueInfo.RateLimit rateLimit = 8;
  if (this->ratelimit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ratelimit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueueInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lmm.QueueInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const QueueInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueueInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lmm.QueueInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lmm.QueueInfo)
    MergeFrom(*source);
  }
}

void QueueInfo::MergeFrom(const QueueInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lmm.QueueInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buffercount() != 0) {
    set_buffercount(from.buffercount());
  }
  if (from.fps() != 0) {
    set_fps(from.fps());
  }
  if (from.elapsedsincelastadd() != 0) {
    set_elapsedsincelastadd(from.elapsedsincelastadd());
  }
  if (from.receivedcount() != 0) {
    set_receivedcount(from.receivedcount());
  }
  if (from.sentcount() != 0) {
    set_sentcount(from.sentcount());
  }
  if (from.totalsize() != 0) {
    set_totalsize(from.totalsize());
  }
  if (from.bitrate() != 0) {
    set_bitrate(from.bitrate());
  }
  if (from.ratelimit() != 0) {
    set_ratelimit(from.ratelimit());
  }
}

void QueueInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lmm.QueueInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueueInfo::CopyFrom(const QueueInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lmm.QueueInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueueInfo::IsInitialized() const {
  return true;
}

void QueueInfo::Swap(QueueInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueueInfo::InternalSwap(QueueInfo* other) {
  using std::swap;
  swap(buffercount_, other->buffercount_);
  swap(fps_, other->fps_);
  swap(elapsedsincelastadd_, other->elapsedsincelastadd_);
  swap(receivedcount_, other->receivedcount_);
  swap(sentcount_, other->sentcount_);
  swap(totalsize_, other->totalsize_);
  swap(bitrate_, other->bitrate_);
  swap(ratelimit_, other->ratelimit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueueInfo::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Lmm

// @@protoc_insertion_point(global_scope)
